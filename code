#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<stdlib.h>

struct Date
{
    int ngay;
    int thang; 
    int nam;
};


struct Khachhang
{
    char maKH[100];
    char tenKH[100];
    int tuoi;
    char gioiTinh[10];
    char Sdt[15];
};

struct Hanghoa
{
    //char maSP[50];
    char tenSP[50];
    int soLuong;  //Khi t?o hàm nh? ph?i có s? ch?nh s?a s? lu?ng (vd: khi nh?p 20 có khách hành mua 10 thì sl bây h là 10)
    double giaBan;  //Giá bán m?i s?n ph?m
};

struct ChitietHoadon
{
    char maHoadon[50];
    Hanghoa sanpham;
    int soluong_mua;
    double tien;      //tien = soluong_mua * giaBan(1sp)
};
 
//CHÚ Ý ÐÂY LÀ ÐO?N GI?I THÍCH CHO PH?N TÍNH TI?N C?A CHI TI?T HOÁ ÐON
// // T?o m?t s?n ph?m m?i
// Hanghoa newHH;
// strcpy(newHH.tenSP, "S?n ph?m A");
// newHH.soLuong = 100;
// newHH.giaBan = 5000;

// // Thêm s?n ph?m m?i vào danh sách s?n ph?m
// HH_Node *hh_node = new HH_Node;
// hh_node->data = newHH;
// hh_node->next = NULL;

// if (hh_list.head == NULL) {
//     hh_list.head = hh_list.tail = hh_node;
// }
// else {
//     hh_list.tail->next = hh_node;
//     hh_list.tail = hh_node;
// }

// // T?o chi ti?t hóa don
// ChitietHoadon newCTHD;
// strcpy(newCTHD.maHoadon, "HD001");
// newCTHD.soluong_mua = 10;

// Tính ti?n cho chi ti?t hóa don
// void tinhTien(ChitietHoadon *cthd, HH_List ds_hh) {
//     // Duy?t danh sách hàng hóa d? tìm s?n ph?m tuong ?ng v?i chi ti?t hóa don
//     HH_Node *node = ds_hh.head;
//     while (node != NULL) {
//         if (strcmp(node->data.tenSP, cthd->sanpham.tenSP) == 0) {
//             // Tìm du?c s?n ph?m tuong ?ng, tính ti?n cho chi ti?t hóa don
//             cthd->tien = cthd->soluong_mua * node->data.giaBan;
//             break;
//         }
//         node = node->next;
//     }
// }
// newCTHD.tien = tinhTien(newCYHD, HH_List ds);


struct Hoadon
{
    char maHoadon[50];
    Khachhang khachhang;
    Date ngay_nhap;   //Dua vao ngay_nhap de xac dinh doanh thu theo ngay
    ChitietHoadon *CTHD; // Con tr? tr? d?n danh sách các chi ti?t hóa don
    int soLuongCTHD; // S? lu?ng chi ti?t hóa don
    double tongTien;
};

struct KH_Node
{
    Khachhang data;
    KH_Node *next;
};

struct HH_Node
{
    Hanghoa data;
    HH_Node *next;
};

struct CTHD_Node
{
    ChitietHoadon data;
    CTHD_Node *next;
};

struct HD_Node
{
    Hoadon data;
    HD_Node *next;
};

struct KH_List
{
    KH_Node *head;
    KH_Node *tail;
};

struct HH_List
{
    HH_Node *head;
    HH_Node *tail;
};

struct CTHD_List
{
    CTHD_Node *head;
    CTHD_Node *tail;
};

struct HD_List
{
    HD_Node *head;
    HD_Node *tail;
};


void init_KH(KH_List &ds)
{
    ds.head = NULL;
    ds.tail = NULL;
}

void init_HH(HH_List &ds)
{
    ds.head = NULL;
    ds.tail = NULL;
}

void init_CTHD(CTHD_List &ds)
{
    ds.head = NULL;
    ds.tail = NULL;
}

void init_HD(HD_List &ds)
{
    ds.head = NULL;
    ds.tail = NULL;
}

KH_Node *create_KH_Node(Khachhang dulieu)
{
    KH_Node *p = new KH_Node;
    if (p == NULL)
    {
        printf("\nKhong du bo nho cap phat!");
        return NULL;
    }

    p->data = dulieu;
    p->next = NULL;

    return p;
}

HH_Node *create_HH_Node(Hanghoa dulieu)
{
    HH_Node *p = new HH_Node;
    if (p == NULL)
    {
        printf("\nKhong du bo nho cap phat!");
        return NULL;
    }

    p->data = dulieu;
    p->next = NULL;

    return p;
}

HD_Node *create_HD_Node(Hoadon dulieu)
{
    HD_Node *p = new HD_Node;
    if (p == NULL)
    {
        printf("\nKhong du bo nho cap phat!");
        return NULL;
    }

    p->data = dulieu;
    p->next = NULL;

    return p;
}

CTHD_Node *create_CTHD_Node(ChitietHoadon dulieu)
{
    CTHD_Node *p = new CTHD_Node;
    if (p == NULL)
    {
        printf("\nKhong du bo nho cap phat!");
        return NULL;
    }

    p->data = dulieu;
    p->next = NULL;

    return p;
}

void ghiFIle_Khachhang(KH_List ds)
{
    FILE *f = fopen("Khachhang.txt", "w");
    if (f == NULL)
    {
        printf("\nKhong mo duoc file");
        _getch();
        return;
    }

    for (KH_Node *k = ds.head; k != NULL; k = k->next)
    {
        fprintf(f, "%-20s %-20s %-10d %-10s %-20s\n",k->data.maKH, k->data.tenKH, k->data.tuoi, 
                                            k->data.gioiTinh, k->data.Sdt);    
    }

    fclose(f);
}

void docFile_Khachhang(KH_List &ds, int *slg_KH)
{
    FILE *f = fopen("Khachhang.txt", "r");
    if (f == NULL)
    {
        printf("\nKhong the mo file");
        _getch();
        return;
    }

    int ktra;
    Khachhang dulieu;
    KH_Node *tmp = ds.head;
    
    while ((ktra = fscanf(f, "%20s %20s %10d %10s %20s",dulieu.maKH, dulieu.tenKH, 
                &dulieu.tuoi, dulieu.gioiTinh, dulieu.Sdt)) == 5)
    {
        KH_Node *p = create_KH_Node(dulieu);
        int find = 0;
        while (tmp != NULL)
        {
            if (strcmp(tmp->data.Sdt, p->data.Sdt) == 0)
            {
                find = 1;
                free(p);
                break;
            }
            tmp = tmp->next;
        }

        tmp = ds.head;
        if (find != 1)
        {
            if (ds.head == NULL)
            {
                ds.head = ds.tail = p;
            }
            else
            {
                ds.tail->next = p;
                ds.tail = p;
            }
            (*slg_KH)++;
        }
    }
    fclose(f);
}

void ghiFIle_Hanghoa(HH_List ds)
{
    FILE *f = fopen("Hanghoa.txt", "w");
    if (f == NULL)
    {
        printf("\nKhong mo duoc file");
        _getch();
        return;
    }

    for (HH_Node *k = ds.head; k != NULL; k = k->next)
    {
        fprintf(f, "%-20s %-10d %-20f\n", k->data.tenSP, k->data.soLuong, k->data.giaBan);    
    }

    fclose(f);
}

void docFile_Hanghoa(HH_List &ds, int *slg_HH)
{
    FILE *f = fopen("Hanghoa.txt", "r");
    if (f == NULL)
    {
        printf("\nKhong the mo file");
        _getch();
        return;
    }

    int ktra;
    Hanghoa dulieu;
    HH_Node *tmp = ds.head;
    
    while ((ktra = fscanf(f, "%20s %10d %20f", dulieu.tenSP, &dulieu.soLuong, &dulieu.giaBan)) == 3)
    {
        HH_Node *p = create_HH_Node(dulieu);
        int find = 0;
        while (tmp != NULL)
        {
            if (strcmp(tmp->data.tenSP, p->data.tenSP) == 0)
            {
                find = 1;
                free(p);
                break;
            }
            tmp = tmp->next;
        }

        tmp = ds.head;
        if (find != 1)
        {
            if (ds.head == NULL)
            {
                ds.head = ds.tail = p;
            }
            else
            {
                ds.tail->next = p;
                ds.tail = p;
            }
            (*slg_HH)++;
        }
    }
    fclose(f);
}


void ghiFIle_Hoadon(HD_List ds)
{
    FILE *f = fopen("Hoadon.txt", "w");
    if (f == NULL)
    {
        printf("\nKhong mo duoc file");
        _getch();
        return;
    }

    for (HD_Node *k = ds.head; k != NULL; k = k->next)
    {
        fprintf(f, "%-20s %-20s %d/%d/%-10d %-20s %-10d %20f\n", k->data.maHoadon, 
                    k->data.khachhang, k->data.ngay_nhap.ngay, k->data.ngay_nhap.thang, 
                    k->data.ngay_nhap.nam, k->data.CTHD->maHoadon, k->data.soLuongCTHD, k->data.tongTien);    
    }

    fclose(f);
}

void docFile_Hoadon(HD_List &ds, int *slg_HD)
{
    FILE *f = fopen("Hoadon.txt", "r");
    if (f == NULL)
    {
        printf("\nKhong the mo file");
        _getch();
        return;
    }

    int ktra;
    Hoadon dulieu;
    HD_Node *tmp = ds.head;
    
    while ((ktra = fscanf(f, "%-20s %-20s %d/%d/%-10d %-10d %20f", 
                            dulieu.maHoadon,dulieu.khachhang.tenKH, &dulieu.ngay_nhap.ngay,
                            &dulieu.ngay_nhap.thang, &dulieu.ngay_nhap.nam, 
                            &dulieu.soLuongCTHD, &dulieu.tongTien)) == 7)
    {
        HD_Node *p = create_HD_Node(dulieu);
        int find = 0;
        while (tmp != NULL)
        {
            if (strcmp(tmp->data.maHoadon, p->data.maHoadon) == 0)
            {
                find = 1;
                free(p);
                break;
            }
            tmp = tmp->next;
        }

        tmp = ds.head;
        if (find != 1)
        {
            if (ds.head == NULL)
            {
                ds.head = ds.tail = p;
            }
            else
            {
                ds.tail->next = p;
                ds.tail = p;
            }
            (*slg_HD)++;
        }
    }
    fclose(f);
}


void ghiFIle_ChitietHoadon(CTHD_List ds)
{
    FILE *f = fopen("ChitietHoadon.txt", "w");
    if (f == NULL)
    {
        printf("\nKhong mo duoc file");
        _getch();
        return;
    }

    for (CTHD_Node *k = ds.head; k != NULL; k = k->next)
    {
        fprintf(f, "%-20s %-20s %-10d %-20f\n", k->data.maHoadon, 
                k->data.sanpham.tenSP, k->data.soluong_mua, k->data.tien);    
    }

    fclose(f);
}

void docFile_ChitietHoadon(CTHD_List &ds, int *slg_CTHD)
{
    FILE *f = fopen("ChitietHoadon.txt", "r");
    if (f == NULL)
    {
        printf("\nKhong the mo file");
        _getch();
        return;
    }

    int ktra;
    ChitietHoadon dulieu;
    CTHD_Node *tmp = ds.head;
    
    while ((ktra = fscanf(f, "%-20s %-20s %-10d %-20f", dulieu.maHoadon, 
                        dulieu.sanpham.tenSP, &dulieu.soluong_mua, &dulieu.tien)) == 4)
    {
        CTHD_Node *p = create_CTHD_Node(dulieu);
        int find = 0;
        while (tmp != NULL)
        {
            if (strcmp(tmp->data.maHoadon, p->data.maHoadon) == 0 
                        && strcmp(tmp->data.sanpham.tenSP, p->data.sanpham.tenSP) == 0)
            {
                find = 1;
                free(p);
                break;
            }
            tmp = tmp->next;
        }

        tmp = ds.head;
        if (find != 1)
        {
            if (ds.head == NULL)
            {
                ds.head = ds.tail = p;
            }
            else
            {
                ds.tail->next = p;
                ds.tail = p;
            }
            (*slg_CTHD)++;
        }
    }
    fclose(f);
}

// Liet ke thong tin hoa don khi biet ma khach hang
void Lietkethongtin_hoadon(HD_List ds,char maKH[])
{
	int dem=0; // bien dem so hoa don cua khach hang can tim
	for(HD_Node* k=ds.head;k!=NULL;k=k->next)
	{
		if(strcmp(k->data.khachhang.maKH,maKH)==0)
		{
			dem++; //tang bien dem len 1 neu tim thay hoa don cua khach hang can tim
			printf("\n-----------------Thong tin hoa don------------------");
			printf("\n Ma hoa don:%s",k->data.maHoadon);
			printf("\n Ngay nhap:%d %d %d",k->data.ngay_nhap.ngay,k->data.ngay_nhap.thang,k->data.ngay_nhap.nam);
			printf("\n Ten khach hang:%s",k->data.khachhang.tenKH);
			printf("\n Ma khach hang:%s",k->data.khachhang.maKH);
			printf("\n Gioi tinh:%s",k->data.khachhang.gioiTinh);
			printf("\n Tuoi:%d",k->data.khachhang.tuoi);
			printf("\n So dien thoai lien he:%s",k->data.khachhang.Sdt);
			printf("\n Ten san pham:%s",k->data.CTHD.sanpham.tenSP);
			printf("\n So luong mua:%d",k->data.CTHD.soluong_mua);
			printf("\n Gia ban:%.2f",k->data.CTHD.sanpham.giaBan);
			printf("\n Tong tien:%.2f",k->data.tongTien);
			printf("\n");
		}
	}
	if(dem==0)
	{
		printf("\n Khong tim thay hoa don cua khach hang co ma:%s",maKH);
	}
}

// Tinh tong doanh thu theo ngay
double tinhDoanhThuTheoNgay(HD_List ds,Date ngay)
{
	double doanhThu=0;
	HD_Node* p=ds.head;
	while(p!=NULL)
	{
		if(p->data.ngay_nhap.ngay == ngay.ngay && p->data.ngay_nhap.thang == ngay.thang && p->data.ngay_nhap.nam ==ngay.nam)
		{
			doanhThu= doanhThu + p->data.tongTien;
		}
		p=p->next;
	}
	return doanhThu;
}

// Tinh tong doanh thu theo thang
double tinhDoanhThuTheoThang(HD_List ds, int thang, int nam)
{
	double doanhThu=0;
	HD_Node* p= ds.head;
	while(p!=NULL)
	{
		if(p->data.ngay_nhap.thang == thang && p->data.ngay_nhap.nam == nam)
		{
			doanhThu= doanhThu + p->data.tongTien;
		}
		p=p->next;
	}
	return doanhThu;
}

// Tinh tong daonh thu theo quy 

double tinhDoanhThuTheoQuy(HD_List ds, int quy, int nam)
{
	double doanhThu=0;
	HD_Node* p=ds.head;
	while(p!=NULL)
	{
		int quy_hd=(p->data.ngay_nhap.thang -1)/3+1;
		if(quy_hd==quy && p->data.ngay_nhap.nam == nam)
		{
			doanhThu= doanhThu + p->data.tongTien;
		}
		p=p->next;
	}
	return doanhThu;
}

/*
void tongDoanhThuTheoQuy(HD_List ds)
{
	double quy1=0, quy2=0, quy3=0, quy4=0;
	HD_Node* p= ds.head;
	while(p!=NULL)
	{
		int thang= p->data.ngay_nhap.thang;
		double tongTien = p->data.tongTien;
		if(thang>=1 && thang<=3)
		{
			quy1=quy1 + tongTien;
		}else if(thang>=4 && thang<= 6){
			quy2=quy2 + tongTien;
		}else if(thang>=7 && thang<=9){
			quy3=quy3 + tongTien;
		}else if( thang>=10 && thang<=12){
			quy4=quy4 + tongTien;
		}
		p=p->next;
	}
	printf("\n Doanh thu theo quy 1:%.2f",quy1);
	printf("\n Doanh thu theo quy 2:%.2f",quy2);
	printf("\n Doanh thu theo quy 3:%.2f",quy3);
	printf("\n Doanh thu theo quy 4:%.2f",quy4);
}
*/

// Tinh tong doanh thu theo nam
double tinhDoanhThuTheoNam(HD_List ds, int nam)
{
	double doanhThu=0;
	HD_Node* p=ds.head;
	while(p!=NULL)
	{
		if(p->data.ngay_nhap.nam == nam)
		{
			doanhThu=doanhThu + p->data.tongTien;
		}
		p=p->next;
	}
	return doanhThu;
}
